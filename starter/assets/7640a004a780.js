import{x as m,v as x,r as o,j as i,w as v}from"./7ff89da25da7.js";import{E as u}from"./960f2965a833.js";import{E as d}from"./4eca66f82c38.js";import{u as f}from"./4b8c81d6710b.js";import{V as E}from"./61706a08d06d.js";import{C as h,H as s,T as g}from"./53606312b885.js";import{B as S}from"./9c0f056335a4.js";import"./9036b00e84e5.js";class T{textService;logger;constructor(e){this.textService=e.references.textService,this.logger=m("api-app:TextApiExtension")}async getApiMethods(){return{changeText:e=>{this.logger.info("Changing text to",JSON.stringify(e)),this.textService.setText(e)}}}}class A extends u{text="not yet set";setText(e){const n=this.text;this.text=e,this.emit("text-changed",{newText:this.text,oldText:n})}getText(){return this.text}}class j{async getApiMethods(){return{justAnotherApiMethod:()=>{console.log("justAnotherApiMethod")}}}}class z{async fetch(e,n){return await globalThis.fetch(e,n)}}const y={"api-app":{name:"api-app",services:{TextApiExtension:{name:"TextApiExtension",clazz:T,provides:[{name:"integration.ApiExtension",qualifier:void 0}],references:{textService:{name:"api-app.TextService",qualifier:void 0,all:!1}}},TextService:{name:"TextService",clazz:A,provides:[{name:"api-app.TextService",qualifier:void 0}],references:{}},SecondApiExtension:{name:"SecondApiExtension",clazz:j,provides:[{name:"integration.ApiExtension",qualifier:void 0}],references:{}}},ui:{references:[{name:"api-app.TextService",qualifier:void 0,all:!1},{name:"integration.ExternalEventService",qualifier:void 0,all:!1}]},properties:{}},"@open-pioneer/chakra-integration":{name:"@open-pioneer/chakra-integration",services:{},ui:{references:[]},properties:{}},"@open-pioneer/runtime":{name:"@open-pioneer/runtime",services:{},ui:{references:[]},properties:{}},"@open-pioneer/core":{name:"@open-pioneer/core",services:{},ui:{references:[]},properties:{}},"@open-pioneer/http":{name:"@open-pioneer/http",services:{HttpServiceImpl:{name:"HttpServiceImpl",clazz:z,provides:[{name:"http.HttpService",qualifier:"http.HttpService"}],references:{}}},ui:{references:[]},properties:{}},"@open-pioneer/integration":{name:"@open-pioneer/integration",services:{ExternalEventServiceImpl:{name:"ExternalEventServiceImpl",clazz:d,provides:[{name:"integration.ExternalEventService",qualifier:"integration.ExternalEventService"}],references:{ctx:{name:"runtime.ApplicationContext",qualifier:void 0,all:!1}}}},ui:{references:[]},properties:{}},"@open-pioneer/runtime-react-support":{name:"@open-pioneer/runtime-react-support",services:{},ui:{references:[]},properties:{}}},q="",C=[];function I(t){throw new Error(`Unsupported locale: '${t}'`)}const M=x(q),b=Object.freeze(Object.defineProperty({__proto__:null,loadMessages:I,locales:C,packages:y,styles:M},Symbol.toStringTag,{value:"Module"})),w="api-app",a=f.bind(void 0,w);function H(){const t=a("integration.ExternalEventService"),e=()=>{t.emitEvent("my-custom-event",{data:"my-event-data"})},n=a("api-app.TextService"),[p,r]=o.useState("");return o.useEffect(()=>{r(n.getText());const c=n.on("text-changed",l=>{r(l.newText)});return()=>c.destroy()},[n]),i.jsx(h,{children:i.jsxs(E,{children:[i.jsx(s,{size:"md",children:"Emitting Events"}),i.jsx(g,{children:"Click this button to emit a browser event:"}),i.jsx(S,{onClick:e,children:"Emit Event"}),i.jsx(s,{size:"md",pt:20,children:"Reacting to API calls from the host site"}),i.jsxs("div",{children:["Current text: ",p]})]})})}const k=v({component:H,appMetadata:b});customElements.define("api-app",k);
