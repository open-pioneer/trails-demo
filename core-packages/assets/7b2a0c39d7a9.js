import{x,v as m,r as o,j as t,w as v}from"./f3214f54131c.js";import{E as u}from"./960f2965a833.js";import{E as d}from"./4eca66f82c38.js";import{u as f}from"./c731a254bcd8.js";import{C as E,H as s}from"./e390e9c2ef35.js";import{T as g}from"./151cd7da02e6.js";import{V as h}from"./1a210df1aeaf.js";import{B as S}from"./6ceaae2e133c.js";class T{textService;logger;constructor(e){this.textService=e.references.textService,this.logger=x("api-app:TextApiExtension")}async getApiMethods(){return{changeText:e=>{this.logger.info("Changing text to",JSON.stringify(e)),this.textService.setText(e)}}}}class A extends u{text="not yet set";setText(e){const i=this.text;this.text=e,this.emit("text-changed",{newText:this.text,oldText:i})}getText(){return this.text}}class j{async getApiMethods(){return{justAnotherApiMethod:()=>{console.log("justAnotherApiMethod")}}}}const y={"api-app":{name:"api-app",services:{TextApiExtension:{name:"TextApiExtension",clazz:T,provides:[{name:"integration.ApiExtension",qualifier:void 0}],references:{textService:{name:"api-app.TextService",qualifier:void 0,all:!1}}},TextService:{name:"TextService",clazz:A,provides:[{name:"api-app.TextService",qualifier:void 0}],references:{}},SecondApiExtension:{name:"SecondApiExtension",clazz:j,provides:[{name:"integration.ApiExtension",qualifier:void 0}],references:{}}},ui:{references:[{name:"api-app.TextService",qualifier:void 0,all:!1},{name:"integration.ExternalEventService",qualifier:void 0,all:!1}]},properties:{}},"@open-pioneer/chakra-integration":{name:"@open-pioneer/chakra-integration",services:{},ui:{references:[]},properties:{}},"@open-pioneer/runtime":{name:"@open-pioneer/runtime",services:{},ui:{references:[]},properties:{}},"@open-pioneer/integration":{name:"@open-pioneer/integration",services:{ExternalEventServiceImpl:{name:"ExternalEventServiceImpl",clazz:d,provides:[{name:"integration.ExternalEventService",qualifier:void 0}],references:{ctx:{name:"runtime.ApplicationContext",qualifier:void 0,all:!1}}}},ui:{references:[]},properties:{}},"@open-pioneer/core":{name:"@open-pioneer/core",services:{},ui:{references:[]},properties:{}},"@open-pioneer/runtime-react-support":{name:"@open-pioneer/runtime-react-support",services:{},ui:{references:[]},properties:{}}},z="",C=[];function q(n){throw new Error(`Unsupported locale: '${n}'`)}const M=m(z),b=Object.freeze(Object.defineProperty({__proto__:null,loadMessages:q,locales:C,packages:y,styles:M},Symbol.toStringTag,{value:"Module"})),k="api-app",a=f.bind(void 0,k);function w(){const n=a("integration.ExternalEventService"),e=()=>{n.emitEvent("my-custom-event",{data:"my-event-data"})},i=a("api-app.TextService"),[c,r]=o.useState("");return o.useEffect(()=>{r(i.getText());const p=i.on("text-changed",l=>{r(l.newText)});return()=>p.destroy()},[i]),t.jsx(E,{children:t.jsxs(h,{children:[t.jsx(s,{size:"md",children:"Emitting Events"}),t.jsx(g,{children:"Click this button to emit a browser event:"}),t.jsx(S,{onClick:e,children:"Emit Event"}),t.jsx(s,{size:"md",pt:20,children:"Reacting to API calls from the host site"}),t.jsxs("div",{children:["Current text: ",c]})]})})}const I=v({component:w,appMetadata:b});customElements.define("api-app",I);
