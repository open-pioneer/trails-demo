const s=Symbol("EventEmitterState");class a{[s]=new d;on(t,e){return this[s].on(t,{listener:e})}once(t,e){return this[s].on(t,{listener:e,once:!0})}emit(t,...e){this[s].emit(t,e[0])}}class d{handlers=new Map;on(t,e){let n=this.handlers.get(t);return n||(n=new Set,this.handlers.set(t,n)),n.add(e),{destroy(){e.removed=!0,n?.delete(e),n=void 0}}}emit(t,e){const n=this.handlers.get(t);if(!n)return;const i=[...n];for(const r of i)r.removed||(r.once&&(r.removed=!0,n.delete(r)),r.listener(e))}}export{a as E};
