var p=(i,e,t)=>{if(!e.has(i))throw TypeError("Cannot "+t)};var o=(i,e,t)=>(p(i,e,"read from private field"),t?t.call(i):e.get(i)),a=(i,e,t)=>{if(e.has(i))throw TypeError("Cannot add the same private member more than once");e instanceof WeakSet?e.add(i):e.set(i,t)},l=(i,e,t,r)=>(p(i,e,"write to private field"),r?r.call(i,t):e.set(i,t),t);var v=(i,e,t)=>(p(i,e,"access private method"),t);import{p as I,q as T,r as c,s as x,a as E,j as m}from"./106ba7f1a803.js";import"./19f63b64ac76.js";import{a as M}from"./c4dd8eb87831.js";import{c as S}from"./4cfa7387829d.js";function C(i){const{theme:e}=I(),t=T();return c.useMemo(()=>x(e.direction,{...t,...i}),[i,e.direction,t])}function k(i){const e=c.useRef(null);return c.useLayoutEffect(()=>{e.current=i}),c.useCallback((...r)=>{const d=e.current;return d(...r)},[])}const y=E("notifier:NotificationService");var s,u,f,h,b,g,R;class K{constructor(){a(this,h);a(this,g);a(this,s,void 0);a(this,u,void 0);a(this,f,void 0)}destroy(){clearTimeout(o(this,f)),l(this,f,void 0)}notify(e){v(this,h,b).call(this,"showNotification",{title:e.title??void 0,message:e.message??void 0,level:e.level??"info",displayDuration:e.displayDuration})}closeAll(){v(this,h,b).call(this,"closeAll")}registerHandler(e){if(o(this,s))return y.warn(`A notification handler has already been registered; this new handler will be ignored.
The <Notifier /> component has likely been used twice in your application.`),{destroy(){}};l(this,s,e);const t=o(this,u);if(l(this,u,void 0),t)for(const[d,...w]of t)e[d](...w);let r=!1;return{destroy:()=>{r||(r=!0,o(this,s)===e&&l(this,s,void 0))}}}}s=new WeakMap,u=new WeakMap,f=new WeakMap,h=new WeakSet,b=function(e,...t){if(o(this,s))o(this,s)[e](...t);else{const r=o(this,u)??l(this,u,[]);if(r.length>=1024){y.error(`Internal notification buffer overflow: this event will be dropped to prevent a memory leak.
Make sure that the UI is configured to display notifications (use <Notifier />).`,{method:e,args:t});return}r.push([e,...t])}},g=new WeakSet,R=function(){o(this,s)||y.warn(`No notification handler has been registered: notifications will not be visible.
Make sure that your app contains the <Notifier /> component.`)};const j="@open-pioneer/notifier",D=M.bind(void 0,j);var L=S({displayName:"WarningTwoIcon",d:"M23.119,20,13.772,2.15h0a2,2,0,0,0-3.543,0L.881,20a2,2,0,0,0,1.772,2.928H21.347A2,2,0,0,0,23.119,20ZM11,8.423a1,1,0,0,1,2,0v6a1,1,0,1,1-2,0Zm1.05,11.51h-.028a1.528,1.528,0,0,1-1.522-1.47,1.476,1.476,0,0,1,1.448-1.53h.028A1.527,1.527,0,0,1,13.5,18.4,1.475,1.475,0,0,1,12.05,19.933Z"});const O=!1;function P(i){const{position:e="top-right"}=i,t=C(),r=D("notifier.NotificationService"),[d,w]=c.useState(!O),N=k(n=>{const H=n.level==="error"?m.jsx(L,{h:"100%",w:"100%"}):void 0;t({position:e,title:n.title,description:n.message||null,status:n.level,isClosable:!0,duration:n.displayDuration??null,icon:H})}),A=k(()=>{t.closeAll()});return c.useEffect(()=>{const n=r.registerHandler({showNotification:N,closeAll:A});return()=>n.destroy()},[d,r,N,A]),m.jsx(m.Fragment,{})}export{K as N,P as a,k as u};
